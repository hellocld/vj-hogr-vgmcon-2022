[gd_scene load_steps=41 format=2]

[ext_resource path="res://Models/AmigaBall/Frames/anim.png" type="Texture" id=1]
[ext_resource path="res://Scenes/LogoSplash/AmigaBall.gd" type="Script" id=2]

[sub_resource type="PhysicsMaterial" id=22]
friction = 0.0
bounce = 10.0

[sub_resource type="VisualShaderNodeSwitch" id=24]

[sub_resource type="VisualShaderNodeVectorCompose" id=25]
default_input_values = [ 0, 0.6, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeVectorFunc" id=26]
function = 5

[sub_resource type="VisualShaderNodeScalarUniform" id=27]
uniform_name = "Hue"

[sub_resource type="VisualShaderNodeSwitch" id=36]
default_input_values = [ 0, false, 1, Vector3( 1, 1, 1 ), 2, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeBooleanUniform" id=37]
uniform_name = "Bump"

[sub_resource type="VisualShaderNodeVectorFunc" id=38]
function = 21

[sub_resource type="VisualShaderNodeTexture" id=28]
source = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=29]
function = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=30]

[sub_resource type="VisualShaderNodeCompare" id=31]
default_input_values = [ 0, 0.0, 1, 0.4, 2, 1e-05 ]
function = 5

[sub_resource type="VisualShaderNodeVectorFunc" id=32]
function = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=33]

[sub_resource type="VisualShader" id=34]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform bool Bump;
uniform float Hue;



void vertex() {
// Output:0

}

void fragment() {
// BooleanUniform:16
	bool n_out16p0 = Bump;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// VectorFunc:4
	vec3 n_out4p0;
	{
		vec3 c = n_out2p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out4p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// Compare:6
	bool n_out6p0 = n_out5p2<=n_out5p0;

// ScalarUniform:14
	float n_out14p0 = Hue;

// VectorFunc:8
	vec3 n_out8p0;
	{
		vec3 c = n_out2p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out8p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorDecompose:9
	float n_out9p0 = n_out8p0.x;
	float n_out9p1 = n_out8p0.y;
	float n_out9p2 = n_out8p0.z;

// VectorCompose:12
	float n_in12p1 = 1.00000;
	vec3 n_out12p0 = vec3(n_out14p0, n_in12p1, n_out9p2);

// VectorFunc:13
	vec3 n_out13p0;
	{
		vec3 c = n_out12p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out13p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// VectorSwitch:10
	vec3 n_out10p0;
	if(n_out6p0)
	{
		n_out10p0 = n_out2p0;
	}
	else
	{
		n_out10p0 = n_out13p0;
	}

// VectorFunc:17
	vec3 n_out17p0 = inversesqrt(n_out10p0);

// VectorSwitch:15
	vec3 n_out15p0;
	if(n_out16p0)
	{
		n_out15p0 = n_out17p0;
	}
	else
	{
		n_out15p0 = n_out10p0;
	}

// Output:0
	COLOR.rgb = n_out15p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -255, 68 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1064, 266 )
nodes/fragment/2/node = SubResource( 28 )
nodes/fragment/2/position = Vector2( -798, 266 )
nodes/fragment/4/node = SubResource( 29 )
nodes/fragment/4/position = Vector2( -551, 418 )
nodes/fragment/5/node = SubResource( 30 )
nodes/fragment/5/position = Vector2( -304, 418 )
nodes/fragment/6/node = SubResource( 31 )
nodes/fragment/6/position = Vector2( -57, 380 )
nodes/fragment/8/node = SubResource( 32 )
nodes/fragment/8/position = Vector2( -551, 266 )
nodes/fragment/9/node = SubResource( 33 )
nodes/fragment/9/position = Vector2( -323, 209 )
nodes/fragment/10/node = SubResource( 24 )
nodes/fragment/10/position = Vector2( 494, 228 )
nodes/fragment/12/node = SubResource( 25 )
nodes/fragment/12/position = Vector2( 95, 209 )
nodes/fragment/13/node = SubResource( 26 )
nodes/fragment/13/position = Vector2( 304, 209 )
nodes/fragment/14/node = SubResource( 27 )
nodes/fragment/14/position = Vector2( -95, 209 )
nodes/fragment/15/node = SubResource( 36 )
nodes/fragment/15/position = Vector2( 817, 190 )
nodes/fragment/16/node = SubResource( 37 )
nodes/fragment/16/position = Vector2( 399, 57 )
nodes/fragment/17/node = SubResource( 38 )
nodes/fragment/17/position = Vector2( 686, 405 )
nodes/fragment/connections = PoolIntArray( 8, 0, 9, 0, 2, 0, 8, 0, 2, 0, 10, 1, 2, 1, 0, 1, 2, 0, 4, 0, 4, 0, 5, 0, 6, 0, 10, 0, 9, 2, 12, 2, 12, 0, 13, 0, 13, 0, 10, 2, 5, 2, 6, 0, 5, 0, 6, 1, 14, 0, 12, 0, 15, 0, 0, 0, 16, 0, 15, 0, 10, 0, 15, 2, 10, 0, 17, 0, 17, 0, 15, 1 )

[sub_resource type="ShaderMaterial" id=35]
resource_local_to_scene = true
shader = SubResource( 34 )
shader_param/Bump = null
shader_param/Hue = null

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 384, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 512, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 640, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 768, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 1 )
region = Rect2( 896, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 1 )
region = Rect2( 1024, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 1 )
region = Rect2( 1152, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 1 )
region = Rect2( 1280, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 1 )
region = Rect2( 1408, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 1 )
region = Rect2( 1536, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 1 )
region = Rect2( 1664, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 1 )
region = Rect2( 1792, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 1 )
region = Rect2( 1920, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 1 )
region = Rect2( 2048, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 1 )
region = Rect2( 2176, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 1 )
region = Rect2( 2304, 0, 128, 128 )

[sub_resource type="SpriteFrames" id=20]
animations = [ {
"frames": [ SubResource( 1 ), SubResource( 2 ), SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ), SubResource( 19 ) ],
"loop": true,
"name": "default",
"speed": 24.0
} ]

[sub_resource type="CircleShape2D" id=21]
radius = 30.5

[sub_resource type="Animation" id=23]
resource_name = "Shrink"
tracks/0/type = "method"
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.5, 0.5 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CollisionShape2D:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0, 0 ) ]
}

[node name="AmigaBall" type="RigidBody2D"]
mass = 2.0
physics_material_override = SubResource( 22 )
contacts_reported = 3
contact_monitor = true
script = ExtResource( 2 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = SubResource( 35 )
scale = Vector2( 0.5, 0.5 )
frames = SubResource( 20 )
frame = 3
speed_scale = 2.0
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 21 )

[node name="LifeSpan" type="Timer" parent="."]
wait_time = 10.0
one_shot = true
autostart = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Shrink = SubResource( 23 )

[connection signal="body_entered" from="." to="." method="_on_AmigaBall_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_AmigaBall_body_exited"]
[connection signal="timeout" from="LifeSpan" to="." method="_on_LifeSpan_timeout"]
